@model Arma3Event.Models.HomeViewModel
@using Arma3Event.Entities

@{
    ViewData["Title"] = "PLANOPS";
}

@section Title {
    <div class="container indicators">
        <div class="clockindicator">
            <span class="header">Heure Zulu</span>
            <span class="clock" id="clock"></span>
        </div>
        @if (Model.NextMatch != null)
        {

            <div class="countdownindicator">
                <span class="header">Prochaine opération</span>
                <span class="clock" id="countdown">
                    @if (Model.NextMatch.StartDate < DateTime.Now)
                    {
                    @:00:00:00
                    }
                </span>
            </div>
            
            @if (Model.NextMatch.State != MatchState.Over)
            {
            <div class="matchindicator row">
                <div class="desc desc-@((int)Model.NextMatch.State) col-10">@Html.DisplayFor(_ => Model.NextMatch.State)</div>
                <div class="num num-@((int)Model.NextMatch.State) col-2"><span>Phase</span>@((int)Model.NextMatch.State)</div>
            </div>
            }
        }
    </div>
    <h1><span>@ViewData["Title"]</span></h1>

}

@if (Model.News != null)
{
    <div class="newsbar alert alert-primary" role="alert">
        <a class="newsbar-heading" asp-controller="@ControllersName.News" asp-action="Index">Annonces</a>
        <a class="newsbar-title" asp-controller="@ControllersName.News" asp-action="Details" asp-route-id="@Model.News.NewsID">@Model.News.Title</a>
    </div>
}

@if (Model.NextMatch != null)
{
    <div class="row">
        <div class="col">
            <h3>Prochaine opération</h3>
        </div>
        <div class="col d-none d-md-block">
            <h3>Situation tactique de reference</h3>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            @{await Html.RenderPartialAsync("_MatchCard", new HomeCardViewModel() { User = Model.User, Match = Model.NextMatch });}
        </div>
        <div class="col-md-6">
            <h3 class="d-md-none mt-3">Situation tactique de reference</h3>
            @if (Model.NextMatch.TacMap != null)
            {
            <a asp-controller="@ControllersName.Events" asp-action="Map" asp-route-id="@Model.NextMatch.MatchID" asp-route-roundID="@Model.NextMatch.Rounds.First().RoundID" asp-fragment="map">
                <img style="width:100%;" src="@Model.NextMatch.TacMap.PreviewHref[512]" />
            </a>
            }
            else
            {
                <p class="alert alert-warning" role="alert">Carte momentanément indisponible.</p>
            }
        </div>
    </div>
}

@if (Model.Videos.Any())
{
<div class="mt-4">
    <h2><a asp-controller="@ControllersName.Videos" asp-action="Index">Journal</a></h2>
    <div class="row row-cols-1 row-cols-md-3 mb-4">
        @foreach (var video in Model.Videos)
        {
            <div class="col mb-4">
                <div class="card h-100">
                    <a href="@video.VideoLink">
                        <img src="@video.Image" class="card-img-top" alt="" />
                    </a>
                    <div class="card-body">
                        <h5 class="card-title"><a href="@video.VideoLink">@video.Title</a></h5>
                        @if (video.Match != null)
                        {
                            <p class="card-text"><a asp-controller="@ControllersName.Events" asp-action="Details" asp-route-id="@video.MatchID">@video.Match.Name</a></p>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>
}
@if (Model.Matchs.Skip(1).Any())
{
<div class="mt-4">
    <h2>Opérations suivantes</h2>
    <div class="row row-cols-1 row-cols-md-2">
        @foreach (var item in Model.Matchs.Skip(1))
        {
            <div class="col mb-4">
                @{await Html.RenderPartialAsync("_MatchCard", new HomeCardViewModel() { User = Model.User, Match = item });}
            </div>
        }
    </div>
    }
</div>
}

@section Styles {
    <link href="https://fonts.googleapis.com/css2?family=Ubuntu+Mono&amp;display=swap" rel="stylesheet">
}

@section Scripts {
    <script src="~/js/home.js" asp-append-version="true">
    </script>

    @if (Model.NextMatch != null && Model.NextMatch.StartDate >= DateTime.Now)
    {
        var dt = Model.NextMatch.StartDate.ToUniversalTime();
<script>
    countDownTo = new Date(Date.UTC(@dt.Year,@(dt.Month-1),@dt.Day,@dt.Hour,@dt.Minute, 0));
</script>
    }
        
}